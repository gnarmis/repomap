#!/usr/bin/env ruby

$: << "#{File.dirname(__FILE__)}/../lib"
require 'repomap'
require 'optparse'

include RepoMap

banner = "Usage: repo [global flags] [[subcommand] subcommand flags]"

global = OptionParser.new do |opts|
  opts.banner = banner
  opts.on( "-h", "--help", "Display this screen" ) do
    STDOUT.puts opts
    exit 0
  end
  opts.on("-v", "--version", "Display the version") do
    STDOUT.puts "RepoMap #{RepoMap::VERSION}"
    exit 0
  end
end

add_opts = {}
add_opts[:recursive] = false
subcommands = {
  'add' => OptionParser.new do |opts|
    opts.banner = "Usage: add [path to git repository]"
    opts.on( "-h", "--help", "Display this screen" ) do
      STDOUT.puts opts
      exit 0
    end
    opts.on("-r", "--recursive", "Add all git repositories recursively") do 
      add_opts[:recursive] = true
    end
  end,
  'rm' => OptionParser.new do |opts|
    opts.banner = "Usage: rm [path to git repository]"
    opts.on( "-h", "--help", "Display this screen" ) do
      STDOUT.puts opts
      exit 0
    end
  end,
  'ls' => OptionParser.new do |opts|
    opts.banner = "Usage: ls"
    opts.on( "-h", "--help", "Display this screen" ) do
      STDOUT.puts opts
      exit 0
    end
  end
}

begin
  global.order!
  argv_minus_global_opts = ARGV.dup
  subcommands[ARGV.shift].order!
  subcommand = argv_minus_global_opts.shift
 
  case subcommand
  when /add/
    if argv_minus_global_opts.length >= 1
      opts = {:action => :add}
      opts[:options] = {:path      => argv_minus_global_opts[-1],
                        :recursive => add_opts[:recursive]}
      RepoMap.handle(opts)
    end
  when /rm/
    if argv_minus_global_opts.length==1
      opts = {:action  => :remove}
      opts[:options] = {:path => argv_minus_global_opts.shift}
      RepoMap.handle(opts)
    end
  when /ls/
    if argv_minus_global_opts.length==0
      opts = {:action => :list}
      RepoMap.handle(opts) 
    end
  else
    puts "repo: Not a known subcommand"
  end  

  exit 0
rescue OptionParser::MissingArgument => e
  puts "repo: #{e}"
rescue NoMethodError => e
  puts banner
end
